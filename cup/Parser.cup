package Compiler;


import java_cup.runtime.*;
import Compiler.Parser.Expr;
import java.util.*;
import java.io.*;

parser code {:

    public static abstract class Expr {
        public abstract int eval();
        public abstract Location right();
        public abstract Location left();
        static class BinExpr extends Expr {
            Expr l,r;
            int s;
            BinExpr(Expr l, int sym,Expr r){
            this.l=l;
            this.r=r;
            this.s=sym;
            }
            public int eval(){
            if (s==sym.PLUS) return l.eval() + r.eval();
            else return l.eval() * r.eval();
            }
            public Location left() { return l.left(); }
            public Location right() {return r.right(); }
        }
        static class Const extends Expr {
            Location l,r;
            Integer value;
            Const(Location l,Integer i,Location r){
            this.l=l;
            this.r=r;
            this.value = i;
            }
            public int eval(){ return value;  }
            public Location left() { return l; }
            public Location right() {return r; }
        }
    }
    public void report_error(String message, Object info) {
         System.out.println("Warning - " + message);
    }

    public void report_fatal_error(String message, Object info) {
        System.out.println("Error - " + message);
        System.exit(-1);
    }

    public static void main(String[] args) {
        try{
            new Parser(new Scanner(new FileReader(args[0])));
        }catch (Exception ex) {
            ex.printStackTrace();
        }
    }
:};


terminal PLUS, POINT, COMMA, SEMICOLUN, BEGIN, END, PROGRAM;
non terminal program, program_name, statements, statement;

start with program;


program ::= PROGRAM program_name statement BEGIN statements END POINT;
